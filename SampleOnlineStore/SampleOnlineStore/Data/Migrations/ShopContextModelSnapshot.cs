// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleOnlineStore.Data;

namespace SampleOnlineStore.Data.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleOnlineStore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCheckedOut");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("ShopUserId");

                    b.HasKey("Id");

                    b.HasIndex("ShopUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "XBOX One"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PS4"
                        });
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Genre");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Language");

                    b.Property<string>("Name");

                    b.Property<int?>("PlatformId");

                    b.Property<decimal>("Price");

                    b.Property<int?>("ProductTypeId");

                    b.Property<string>("Publisher");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Grand Theft Auto V",
                            Genre = "Action",
                            ImageUrl = "gta5.jpg",
                            Language = "English",
                            Name = "Grand Theft Auto V",
                            PlatformId = 1,
                            Price = 10.00m,
                            ProductTypeId = 1,
                            Publisher = "Rockstar Games"
                        },
                        new
                        {
                            Id = 2,
                            Description = "PUBG",
                            Genre = "Shooter",
                            ImageUrl = "pubg.jpg",
                            Language = "Russian",
                            Name = "PUBG",
                            PlatformId = 1,
                            Price = 16.50m,
                            ProductTypeId = 1,
                            Publisher = "Tencent"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Steam Gift Card",
                            Genre = "Gift",
                            ImageUrl = "gift.jpg",
                            Language = "English",
                            Name = "Steam Gift Card",
                            PlatformId = 1,
                            Price = 15.00m,
                            ProductTypeId = 3,
                            Publisher = "Steam"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Destiny 2",
                            Genre = "Action",
                            ImageUrl = "destiny2.jpg",
                            Language = "Ukrainian",
                            Name = "Destiny 2",
                            PlatformId = 3,
                            Price = 23.10m,
                            ProductTypeId = 1,
                            Publisher = "Activision"
                        },
                        new
                        {
                            Id = 5,
                            Description = "NFS: MW",
                            Genre = "Racing",
                            ImageUrl = "nfsmw.jpg",
                            Language = "Ukrainian",
                            Name = "Need For Speed: Most Wanted",
                            PlatformId = 1,
                            Price = 13.00m,
                            ProductTypeId = 1,
                            Publisher = "EA Games"
                        });
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Game"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DLC"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gift card"
                        });
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.ShopUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("ShopUser");
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.Order", b =>
                {
                    b.HasOne("SampleOnlineStore.Entities.ShopUser", "ShopUser")
                        .WithMany("Orders")
                        .HasForeignKey("ShopUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.OrderLine", b =>
                {
                    b.HasOne("SampleOnlineStore.Entities.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SampleOnlineStore.Entities.Product", "Product")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleOnlineStore.Entities.Product", b =>
                {
                    b.HasOne("SampleOnlineStore.Entities.Platform", "Platform")
                        .WithMany("Products")
                        .HasForeignKey("PlatformId");

                    b.HasOne("SampleOnlineStore.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
